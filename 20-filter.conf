filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => 
        ["<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}",
         "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{GREEDYDATA:syslog_message}"]}
    }

    if [syslog_program] == "pflog" {
      grok {
        patterns_dir => ["/usr/local/etc/logstash/patterns"]
        match => { "syslog_message" => "%{SYSLOGTIMESTAMP:timestamp} rule %{INT:rnr}\/\(match\) %{PF_ACTION:action} %{PF_DIR:direction} on %{DATA:interface}: %{IP:srcip}(?:\s|\.%{INT:srcport})? > %{IP:dstip}(?:\s|\.%{INT:dstport})?: %{GREEDYDATA:content}" }
      }
      mutate {
        # Fix the timestamp to not have micros.
        gsub => [ "timestamp", ".{3}$", "" ]
      }
      date {
        # If pflog, match on timestamp from tcpdump/pflog instead
        match => [ "timestamp","MMM dd HH:mm:ss.SSS", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601" ]
        timezone => "Europe/Stockholm"
      }
    }

    else {
      # If not pflog, use syslog timestamp
      date {
        match => [ "syslog_timestamp","MMM  d HH:mm:ss", "MMM dd HH:mm:ss", "ISO8601" ]
        timezone => "Europe/Stockholm"
      }
    }
    # Get the syslog prio parsed "<34>" for example
    syslog_pri { }
  }
}
